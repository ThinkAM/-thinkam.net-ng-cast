"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vg_mute_1 = require("./vg-mute");
var vg_api_1 = require("../../core/services/vg-api");
describe('Mute Button', function () {
    var mute;
    var ref;
    var api;
    beforeEach(function () {
        ref = {
            nativeElement: {
                getAttribute: function (name) {
                    return name;
                }
            }
        };
        api = new vg_api_1.VgAPI();
        api.medias = {
            main: {
                id: 'main',
                volume: 1
            },
            secondary: {
                id: 'secondary',
                volume: 0.5
            }
        };
        mute = new vg_mute_1.VgMute(ref, api);
    });
    it('Should get media by id on init', function () {
        spyOn(api, 'getMediaById').and.callFake(function () { return ({ volume: 1 }); });
        mute.vgFor = 'test';
        mute.onPlayerReady();
        expect(api.getMediaById).toHaveBeenCalledWith('test');
        expect(mute.currentVolume).toBe(1);
    });
    it('Should get volume for one media file', function () {
        api.medias = {
            main: {
                volume: 1
            }
        };
        mute.target = api;
        var volume = mute.getVolume();
        expect(volume).toBe(1);
    });
    describe('onClick (single media)', function () {
        it('should mute volume if current volume is different than 0', function () {
            api.medias = {
                main: {
                    volume: 0.75
                }
            };
            mute.target = api;
            mute.onClick();
            expect(mute.currentVolume).toBe(0.75);
            expect(api.volume).toEqual(0);
        });
        it('should unmute volume if current volume is 0', function () {
            api.medias = {
                main: {
                    volume: 0
                }
            };
            mute.target = api;
            mute.currentVolume = 0.75;
            mute.onClick();
            expect(api.volume).toEqual(0.75);
        });
    });
    describe('onClick (multiple medias)', function () {
        it('should mute volume if current volume is different than 0', function () {
            mute.target = api;
            mute.onClick();
            expect(mute.currentVolume).toBe(1);
            expect(api.volume).toEqual(0);
        });
        it('should unmute volume if current volume is 0', function () {
            api.medias = {
                main: {
                    id: 'main',
                    volume: 0
                },
                secondary: {
                    id: 'secondary',
                    volume: 0
                }
            };
            mute.target = api;
            mute.currentVolume = 0.75;
            mute.onClick();
            expect(api.volume).toEqual(0.75);
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctbXV0ZS5zcGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbnRyb2xzL3ZnLW11dGUvdmctbXV0ZS5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQW1DO0FBQ25DLHFEQUFtRDtBQUduRCxRQUFRLENBQUMsYUFBYSxFQUFFO0lBQ3RCLElBQUksSUFBWSxDQUFDO0lBQ2pCLElBQUksR0FBZSxDQUFDO0lBQ3BCLElBQUksR0FBVSxDQUFDO0lBRWYsVUFBVSxDQUFDO1FBQ1QsR0FBRyxHQUFHO1lBQ0osYUFBYSxFQUFFO2dCQUNiLFlBQVksRUFBRSxVQUFDLElBQUk7b0JBQ2pCLE9BQU8sSUFBSSxDQUFDO2dCQUNkLENBQUM7YUFDRjtTQUNGLENBQUM7UUFFRixHQUFHLEdBQUcsSUFBSSxjQUFLLEVBQUUsQ0FBQztRQUNsQixHQUFHLENBQUMsTUFBTSxHQUFHO1lBQ1gsSUFBSSxFQUFFO2dCQUNKLEVBQUUsRUFBRSxNQUFNO2dCQUNWLE1BQU0sRUFBRSxDQUFDO2FBQ1Y7WUFDRCxTQUFTLEVBQUU7Z0JBQ1QsRUFBRSxFQUFFLFdBQVc7Z0JBQ2YsTUFBTSxFQUFFLEdBQUc7YUFDWjtTQUNGLENBQUM7UUFFRixJQUFJLEdBQUcsSUFBSSxnQkFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRTtRQUNuQyxLQUFLLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBTSxPQUFBLENBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUEsRUFBbEIsQ0FBa0IsQ0FBQyxDQUFDO1FBRWxFLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUVyQixNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVks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XG5pbXBvcnQgeyBWZ0FQSSB9IGZyb20gJy4uLy4uL2NvcmUvc2VydmljZXMvdmctYXBpJztcbmltcG9ydCB7IEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZGVzY3JpYmUoJ011dGUgQnV0dG9uJywgKCkgPT4ge1xuICBsZXQgbXV0ZTogVmdNdXRlO1xuICBsZXQgcmVmOiBFbGVtZW50UmVmO1xuICBsZXQgYXBpOiBWZ0FQSTtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICByZWYgPSB7XG4gICAgICBuYXRpdmVFbGVtZW50OiB7XG4gICAgICAgIGdldEF0dHJpYnV0ZTogKG5hbWUpID0+IHtcbiAgICAgICAgICByZXR1cm4gbmFtZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBhcGkgPSBuZXcgVmdBUEkoKTtcbiAgICBhcGkubWVkaWFzID0ge1xuICAgICAgbWFpbjoge1xuICAgICAgICBpZDogJ21haW4nLFxuICAgICAgICB2b2x1bWU6IDFcbiAgICAgIH0sXG4gICAgICBzZWNvbmRhcnk6IHtcbiAgICAgICAgaWQ6ICdzZWNvbmRhcnknLFxuICAgICAgICB2b2x1bWU6IDAuNVxuICAgICAgfVxuICAgIH07XG5cbiAgICBtdXRlID0gbmV3IFZnTXV0ZShyZWYsIGFwaSk7XG4gIH0pO1xuXG4gIGl0KCdTaG91bGQgZ2V0IG1lZGlhIGJ5IGlkIG9uIGluaXQnLCAoKSA9PiB7XG4gICAgc3B5T24oYXBpLCAnZ2V0TWVkaWFCeUlkJykuYW5kLmNhbGxGYWtlKCgpID0+IDxhbnk+eyB2b2x1bWU6IDEgfSk7XG5cbiAgICBtdXRlLnZnRm9yID0gJ3Rlc3QnO1xuICAgIG11dGUub25QbGF5ZXJSZWFkeSgpO1xuXG4gICAgZXhwZWN0KGFwaS5nZXRNZWRpYUJ5SWQpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCd0ZXN0Jyk7XG4gICAgZXhwZWN0KG11dGUuY3VycmVudFZvbHVtZSkudG9CZSgxKTtcbiAgfSk7XG5cbiAgaXQoJ1Nob3VsZCBnZXQgdm9sdW1lIGZvciBvbmUgbWVkaWEgZmlsZScsICgpID0+IHtcbiAgICBhcGkubWVkaWFzID0ge1xuICAgICAgbWFpbjoge1xuICAgICAgICB2b2x1bWU6IDFcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICBsZXQgdm9sdW1lID0gbXV0ZS5nZXRWb2x1bWUoKTtcblxuICAgIGV4cGVjdCh2b2x1bWUpLnRvQmUoMSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdvbkNsaWNrIChzaW5nbGUgbWVkaWEpJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbXV0ZSB2b2x1bWUgaWYgY3VycmVudCB2b2x1bWUgaXMgZGlmZmVyZW50IHRoYW4gMCcsICgpID0+IHtcbiAgICAgIGFwaS5tZWRpYXMgPSB7XG4gICAgICAgIG1haW46IHtcbiAgICAgICAgICB2b2x1bWU6IDAuNzVcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICAgIG11dGUub25DbGljaygpO1xuXG4gICAgICBleHBlY3QobXV0ZS5jdXJyZW50Vm9sdW1lKS50b0JlKDAuNzUpO1xuICAgICAgZXhwZWN0KGFwaS52b2x1bWUpLnRvRXF1YWwoMCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHVubXV0ZSB2b2x1bWUgaWYgY3VycmVudCB2b2x1bWUgaXMgMCcsICgpID0+IHtcbiAgICAgIGFwaS5tZWRpYXMgPSB7XG4gICAgICAgIG1haW46IHtcbiAgICAgICAgICB2b2x1bWU6IDBcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICAgIG11dGUuY3VycmVudFZvbHVtZSA9IDAuNzU7XG5cbiAgICAgIG11dGUub25DbGljaygpO1xuXG4gICAgICBleHBlY3QoYXBpLnZvbHVtZSkudG9FcXVhbCgwLjc1KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ29uQ2xpY2sgKG11bHRpcGxlIG1lZGlhcyknLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBtdXRlIHZvbHVtZSBpZiBjdXJyZW50IHZvbHVtZSBpcyBkaWZmZXJlbnQgdGhhbiAwJywgKCkgPT4ge1xuICAgICAgbXV0ZS50YXJnZXQgPSBhcGk7XG5cbiAgICAgIG11dGUub25DbGljaygpO1xuXG4gICAgICBleHBlY3QobXV0ZS5jdXJyZW50Vm9sdW1lKS50b0JlKDEpO1xuICAgICAgZXhwZWN0KGFwaS52b2x1bWUpLnRvRXF1YWwoMCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHVubXV0ZSB2b2x1bWUgaWYgY3VycmVudCB2b2x1bWUgaXMgMCcsICgpID0+IHtcbiAgICAgIGFwaS5tZWRpYXMgPSB7XG4gICAgICAgIG1haW46IHtcbiAgICAgICAgICBpZDogJ21haW4nLFxuICAgICAgICAgIHZvbHVtZTogMFxuICAgICAgICB9LFxuICAgICAgICBzZWNvbmRhcnk6IHtcbiAgICAgICAgICBpZDogJ3NlY29uZGFyeScsXG4gICAgICAgICAgdm9sdW1lOiAwXG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIG11dGUudGFyZ2V0ID0gYXBpO1xuXG4gICAgICBtdXRlLmN1cnJlbnRWb2x1bWUgPSAwLjc1O1xuXG4gICAgICBtdXRlLm9uQ2xpY2soKTtcblxuICAgICAgZXhwZWN0KGFwaS52b2x1bWUpLnRvRXF1YWwoMC43NSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=