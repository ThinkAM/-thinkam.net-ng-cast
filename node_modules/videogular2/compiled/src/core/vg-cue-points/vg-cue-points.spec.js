"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vg_cue_points_1 = require("./vg-cue-points");
describe('Cue points', function () {
    var cuePoints;
    var ref;
    beforeEach(function () {
        ref = {
            nativeElement: document.createElement('div')
        };
        cuePoints = new vg_cue_points_1.VgCuePoints(ref);
    });
    it('Should handle onLoad event', function () {
        cuePoints.ngOnInit();
        expect(cuePoints.onLoad$).toBeDefined();
    });
    xit('Should handle enter/exit events', function () {
        var event = {
            target: document.createElement('video')
        };
        var track = event.target.addTextTrack('captions', 'test');
        track.addCue(new TextTrackCue(1, 2, 'cue 1')); // Illegal Constructor
        cuePoints.onLoad(event);
        expect(cuePoints.onEnter$).toBeDefined();
        expect(cuePoints.onExit$).toBeDefined();
    });
    it('Should handle onEnter event', function () {
        spyOn(cuePoints.onEnterCuePoint, 'emit').and.callThrough();
        var event = {
            target: {}
        };
        cuePoints.onEnter(event);
        expect(cuePoints.onEnterCuePoint.emit).toHaveBeenCalledWith(event.target);
    });
    it('Should handle onExit event', function () {
        spyOn(cuePoints.onExitCuePoint, 'emit').and.callThrough();
        var event = {
            target: {}
        };
        cuePoints.onExit(event);
        expect(cuePoints.onExitCuePoint.emit).toHaveBeenCalledWith(event.target);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctY3VlLXBvaW50cy5zcGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvcmUvdmctY3VlLXBvaW50cy92Zy1jdWUtcG9pbnRzLnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxpREFBOEM7QUFJOUMsUUFBUSxDQUFDLFlBQVksRUFBRTtJQUNuQixJQUFJLFNBQXNCLENBQUM7SUFDM0IsSUFBSSxHQUFlLENBQUM7SUFFcEIsVUFBVSxDQUFDO1FBQ1AsR0FBRyxHQUFHO1lBQ0YsYUFBYSxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDO1NBQy9DLENBQUM7UUFFRixTQUFTLEdBQUcsSUFBSSwyQkFBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDRCQUE0QixFQUFFO1FBRzdCLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVyQixNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzVDLENBQUMsQ0FBQyxDQUFDO0lBRUgsR0FBRyxDQUFDLGlDQUFpQyxFQUFFO1FBRW5DLElBQUksS0FBSyxHQUFHO1lBQ1IsTUFBTSxFQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDO1NBQzFDLENBQUM7UUFFRixJQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDMUQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxzQkFBc0I7UUFFckUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QixNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3pDLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDNUMsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNkJBQTZCLEVBQUU7UUFDOUIsS0FBSyxDQUFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRTNELElBQUksS0FBSyxHQUFHO1lBQ1IsTUFBTSxFQUFFLEVBQUU7U0FDYixDQUFDO1FBRUYsU0FBUyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV6QixNQUFNLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUUsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNEJBQTRCLEVBQUU7UUFDN0IsS0FBSyxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRTFELElBQUksS0FBSyxHQUFHO1lBQ1IsTUFBTSxFQUFFLEVBQUU7U0FDYixDQUFDO1FBRUYsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV4QixNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0UsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVmdDdWVQb2ludHMgfSBmcm9tICcuL3ZnLWN1ZS1wb2ludHMnO1xuXG5cblxuZGVzY3JpYmUoJ0N1ZSBwb2ludHMnLCAoKSA9PiB7XG4gICAgbGV0IGN1ZVBvaW50czogVmdDdWVQb2ludHM7XG4gICAgbGV0IHJlZjogRWxlbWVudFJlZjtcblxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICByZWYgPSB7XG4gICAgICAgICAgICBuYXRpdmVFbGVtZW50OiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICB9O1xuXG4gICAgICAgIGN1ZVBvaW50cyA9IG5ldyBWZ0N1ZVBvaW50cyhyZWYpO1xuICAgIH0pO1xuXG4gICAgaXQoJ1Nob3VsZCBoYW5kbGUgb25Mb2FkIGV2ZW50JywgKCkgPT4ge1xuXG5cbiAgICAgICAgY3VlUG9pbnRzLm5nT25Jbml0KCk7XG5cbiAgICAgICAgZXhwZWN0KGN1ZVBvaW50cy5vbkxvYWQkKS50b0JlRGVmaW5lZCgpO1xuICAgIH0pO1xuXG4gICAgeGl0KCdTaG91bGQgaGFuZGxlIGVudGVyL2V4aXQgZXZlbnRzJywgKCkgPT4ge1xuXG4gICAgICAgIGxldCBldmVudCA9IHtcbiAgICAgICAgICAgIHRhcmdldDogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKVxuICAgICAgICB9O1xuXG4gICAgICAgIGxldCB0cmFjayA9IGV2ZW50LnRhcmdldC5hZGRUZXh0VHJhY2soJ2NhcHRpb25zJywgJ3Rlc3QnKTtcbiAgICAgICAgdHJhY2suYWRkQ3VlKG5ldyBUZXh0VHJhY2tDdWUoMSwgMiwgJ2N1ZSAxJykpOyAvLyBJbGxlZ2FsIENvbnN0cnVjdG9yXG5cbiAgICAgICAgY3VlUG9pbnRzLm9uTG9hZChldmVudCk7XG4gICAgICAgIGV4cGVjdChjdWVQb2ludHMub25FbnRlciQpLnRvQmVEZWZpbmVkKCk7XG4gICAgICAgIGV4cGVjdChjdWVQb2ludHMub25FeGl0JCkudG9CZURlZmluZWQoKTtcbiAgICB9KTtcblxuICAgIGl0KCdTaG91bGQgaGFuZGxlIG9uRW50ZXIgZXZlbnQnLCAoKSA9PiB7XG4gICAgICAgIHNweU9uKGN1ZVBvaW50cy5vbkVudGVyQ3VlUG9pbnQsICdlbWl0JykuYW5kLmNhbGxUaHJvdWdoKCk7XG5cbiAgICAgICAgbGV0IGV2ZW50ID0ge1xuICAgICAgICAgICAgdGFyZ2V0OiB7fVxuICAgICAgICB9O1xuXG4gICAgICAgIGN1ZVBvaW50cy5vbkVudGVyKGV2ZW50KTtcblxuICAgICAgICBleHBlY3QoY3VlUG9pbnRzLm9uRW50ZXJDdWVQb2ludC5lbWl0KS50b0hhdmVCZWVuQ2FsbGVkV2l0aChldmVudC50YXJnZXQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ1Nob3VsZCBoYW5kbGUgb25FeGl0IGV2ZW50JywgKCkgPT4ge1xuICAgICAgICBzcHlPbihjdWVQb2ludHMub25FeGl0Q3VlUG9pbnQsICdlbWl0JykuYW5kLmNhbGxUaHJvdWdoKCk7XG5cbiAgICAgICAgbGV0IGV2ZW50ID0ge1xuICAgICAgICAgICAgdGFyZ2V0OiB7fVxuICAgICAgICB9O1xuXG4gICAgICAgIGN1ZVBvaW50cy5vbkV4aXQoZXZlbnQpO1xuXG4gICAgICAgIGV4cGVjdChjdWVQb2ludHMub25FeGl0Q3VlUG9pbnQuZW1pdCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoZXZlbnQudGFyZ2V0KTtcbiAgICB9KTtcbn0pO1xuIl19